{
  "canon": "0.0.1",
  "info": {
    "title": "Symphony 2.0 Object Model Chat Application Types",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "id": "com.symphony.s2.model.chat",
  "version": "1.0",
  "basePath": "/chat/v1",
  "model": {
    "javaGenPackage": "com.symphony.oss.models.sbe.id.canon",
    "javaFacadePackage": "com.symphony.oss.models.sbe.id.canon.facade"
  },
  "methods": {
    "/securityContexts/estsablish": {
      "post": {
        "summary": "Get or create a securityContext",
        "operationId": "establish",
        "payload": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EstablishSecurityContextRequest"
          }
        },
        "response": {
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/fundamental.json#/components/schemas/FundamentalObject"
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": {
        "userId": {
          "in": "path",
          "description": "External userId of the user",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "get": {
        "summary": "Get the base user object",
        "operationId": "getUser",
        "response": {
          "required": false,
          "schema": {
            "$ref": "https://models.oss.symphony.com/chat.json#/components/schemas/User"
          }
        }
      }
    },
    "/users/{userId}/entitlements/{entitlementId}": {
      "parameters": {
        "userId": {
          "in": "path",
          "description": "External userId of the user",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        },
        "entitlementId": {
          "in": "path",
          "description": "Entitlement ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      },
      "get": {
        "summary": "Get the given entitlement for the given user. Returns 201 if the entitlement exist or 403 if not.",
        "operationId": "validateEntitlement"
      }
    }
  },
  "components": {
    "schemas": {
      "EstablishSecurityContextRequest": {
        "type": "object",
        "required": [
          "threadId",
          "rotationId",
          "exchangeKeyHash",
          "wrappedKey"
        ],
        "properties": {
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          },
          "rotationId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/RotationId"
          },
          "exchangeKeyHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "cipherSuiteId": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/CipherSuiteId"
          },
          "wrappedKey": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/WrappedKey"
          },
          "encryptedKey": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/WrappedKey"
          }
        }
      },
      "ThreadIdObject": {
        "description": "The ID object for an SBE thread. Points to a Stream.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/PodFundamentalId",
        "properties": {
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          }
        }
      },
      "MessageIdObject": {
        "description": "The ID object for an SBE message, messageType is the (fully qualified) TYPE_ID for the message type.",
        "type": "object",
        "extends": "#/components/schemas/ThreadIdObject",
        "required": [
          "messageId",
          "messageType"
        ],
        "properties": {
          "messageId": {
            "$ref": "https://models.oss.symphony.com/chat.json#/components/schemas/MessageId"
          },
          "messageType": {
            "type": "string"
          }
        }
      },
      "UserMessageIdObject": {
        "description": "The ID object for a users interaction with an SBE message, messageType is the (fully qualified) TYPE_ID for the message type.",
        "type": "object",
        "extends": "#/components/schemas/MessageIdObject",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "AttachmentMessageIdObject": {
        "description": "The ID object for an SBE attachment download message, messageType is the (fully qualified) TYPE_ID for the message type.",
        "type": "object",
        "extends": "#/components/schemas/UserMessageIdObject",
        "required": [
          "fileId"
        ],
        "properties": {
          "fileId": {
            "type": "string"
          }
        }
      },
      "BotCredential": {
        "type": "object",
        "facade": true,
        "description": "A secret credential which a bot needs to bootstrap.",
        "required": [
          "encodedPrivateKey",
          "podId",
          "userId",
          "principalBaseHash"
        ],
        "properties": {
          "encodedPrivateKey": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/PemPrivateKey"
          },
          "podId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          },
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "principalBaseHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      
      
      
      "#This is unsorted content": [
        "Comment"
      ],
      
      
      
      
      
      
      
      "SharedUserInfo": {
        "description": "The bits of a user record which may be shared with other users.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/VersionedObject",
        "required": [
          "prettyName",
          "screenName"
        ],
        "properties": {
          "active": {
            "type": "boolean"
          },
          "assetClass": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "type": "string"
          },
          "deptName": {
            "type": "string"
          },
          "divName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "imageUrl": {
            "type": "string",
            "format": "url"
          },
          "imageUrlSmall": {
            "type": "string",
            "format": "url"
          },
          "industry": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "type": "string"
            }
          },
          "jobFunction": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string",
            "format": "phone"
          },
          "prettyName": {
            "type": "string"
          },
          "screenName": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "workPhone": {
            "type": "string",
            "format": "phone"
          }
        }
      },
      "PrivateUserInfo": {
        "description": "The bits of a user record which are not shared with other users.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/VersionedObject",
        "properties": {
          "createdBy": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "entitlement": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "https://models.oss.symphony.com/chat.json#/components/schemas/Entitlement"
            }
          },
          "roles": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "https://models.oss.symphony.com/chat.json#/components/schemas/Role"
            }
          },
          "samlId": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "verifiedForBadge": {
            "type": "boolean"
          }
        }
      },
      "Venue": {
        "description": "A venue, chatroom, MIM or IM.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/VersionedObject",
        "facade": false,
        "properties": {
          "createdBy": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          }
        }
      },
          "StreamType": {
            "description": "Stream type",
            "type": "string",
            "enum": [
              "ROOM",
              "MIM",
              "IM",
              "MEETING",
              "POST"
            ]
          },
          "StreamState": {
            "description": "Stream states",
            "type": "string",
            "enum": [
              "NEGOTIATION",
              "CREATED",
              "ACTIVE",
              "INACTIVE",
              "DESTROYED"
            ]
          },
          "#StreamMembership": {
            "description": "Stream membership object",
            "type": "object",
            "properties": {
              "owner": {
                "description": "If the member is owner of the room",
                "type": "boolean"
              },
              "joinDate": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
              },
              "userBaseHash": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
              }
            }
          },
          "#StreamMembers": {
            "type": "object",
            "description": "Representation of all stream members",
            "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/ApplicationObject",
            "properties": {
              "members": {
                "type": "array",
                "x-canon-cardinality": "LIST",
                "items": {
                  "$ref": "#/components/schemas/StreamMembership"
                }
              }
            }
          },
          "Stream": {
            "description": "Stream object",
            "extends": "https://models.oss.symphony.com/fundamental.json#/components/schemas/ApplicationObject",
            "type": "object",
            "facade": true,
            "properties": {
              "copyDisabled": {
                "description": "If members are allowed to copy message from stream",
                "type": "boolean"
              },
              "creationDate": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
              },
              "creatorId": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
              },
              "#cryptoRotationInfo": {
                "$ref": "https://models.oss.symphony.com/chat.json#/components/schemas/CryptoRotationInfo"
              },
              "description": {
                "description": "Stream description",
                "type": "string"
              },
              "crossPod": {
                "description": "If the stream is cross pod",
                "type": "boolean"
              },
              "discoverable": {
                "description": "Show chat in search",
                "type": "boolean"
              },
              "externalOwned": {
                "description": "If the streams belongs to other pod",
                "type": "boolean"
              },
              "locked": {
                "description": "If the stream is locked",
                "type": "boolean"
              },
              "publicRoom": {
                "description": "If the stream is a public room",
                "type": "boolean"
              },
              "readOnly": {
                "description": "If the stream is readonly, i.e. only creator can send messages to stream ",
                "type": "boolean"
              },
              "keywords": {
                "description": "List of keywords",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lastDisabled": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
              },
              "lockDate": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
              },
              "meetingId": {
                "description": "The id of the meeting associated with this stream, only used for meeting types",
                "type": "string"
              },
              "memberAddUserEnabled": {
                "description": "If members can add people",
                "type": "boolean"
              },
              "multiLateral": {
                "description": "Stream belongs to more than one pod",
                "type": "boolean"
              },
              "name": {
                "description": "Stream name",
                "type": "string"
              },
              "ownerPodId": {
                "description": "Id of the pod which created the stream",
                "type": "integer",
                "format": "int64"
              },
              "ownerPodName": {
                "description": "Name of the pod which created the stream",
                "type": "string"
              },
              "parentStreamId": {
                "$ref": "#/components/schemas/ThreadIdObject"
              },
              "podDistributionHistory": {
                "description": "List of companies, in a xpod stream, which were or are member of this stream",
                "type": "array",
                "x-canon-cardinality": "SET",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "podDistributionList": {
                "description": "List of companies, in a xpod stream, which currently are member of this stream",
                "type": "array",
                "x-canon-cardinality": "SET",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "podRestrictionList": {
                "description": "",
                "type": "array",
                "x-canon-cardinality": "SET",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "sendMessageDisabled": {
                "description": "",
                "type": "boolean"
              },
              "sendMessageDisabledReasonCode": {
                "description": "",
                "type": "string"
              },
              "shareHistoryEnabled": {
                "description": "If new members can view history",
                "type": "boolean"
              },
              "state": {
                "$ref": "#/components/schemas/StreamState"
              },
              "streamId": {
                "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
              },
              "type": {
                "$ref": "#/components/schemas/StreamType"
              },
              "largeStream": {
                "description": "Tell whether is a large room or not",
                "type": "boolean"
              }
            }
          }
    }
  }
}
