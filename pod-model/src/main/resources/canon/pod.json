{
	"canon": "0.0.1",
	"info": {
		"title": "Symphony 2.0 Pod Model - The public Pod API see https://developers.symphony.com/restapi/reference",
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"id": "com.symphony.s2.model.pod",
  "version": "1.0",
	"model": {
		"javaGenPackage": "com.symphony.oss.models.pod.canon",
		"javaFacadePackage": "com.symphony.oss.models.pod.canon.facade"
	},
  "methods": {
    "/v1/admin/system/protocols/list": {
      "get": {
        "summary": "Get a list of all URI protocols supported by the company (pod).",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "System"
        ],
        "response": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/UserV2"
          }
        }
      }
    },
    "/v2/user": {
      "get": {
        "summary": "Get information about the given user.",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "uid": {
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
            }
          },
          "email": {
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          "local": {
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "User"
        ],
        "response": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UserV2"
          }
        }
      }
    },
    "/v3/users": {
      "get": {
        "summary": "Search users by emails or ids. Only one of the search lists should be informed at a time. Search lists may containt up to 100 elements.",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "uid": {
            "description": "User IDs as a list of decimal integers separated by comma",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
            }
          },
          "username": {
            "description": "List of username separated by comma",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          "email": {
            "description": "List of email addresses separated by comma",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          "local": {
            "description": [
              "If true then a local DB search will be performed and only local pod users will be",
              "returned. If absent or false then a directory search will be performed and users",
              "from other pods who are visible to the calling user will also be returned."
            ],
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "response": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/V2UserList"
          }
        }
      }
    },
    "/v2/sessioninfo": {
      "get": {
        "summary": "Get information about the current user's session.",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Session"
        ],
        "response": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UserV2"
          }
        }
      }
    },
    "/v1/podcert": {
      "get": {
        "summary": "Retrieve the pod certificate that can be use to validate signed JWT tokens generated from the pod.",
        "tags": [
          "Pod"
        ],
        "response": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PodCertificate"
          }
        }
      }
    },
    "/v1/streams/list": {
      "post": {
        "summary": "Retrieve a list of all streams of which the requesting user is a member,\nsorted by creation date (ascending).\n",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "skip": {
            "description": "No. of results to skip.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          "limit": {
            "description": "Max no. of results to return. If no value is provided, 50 is the default.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "Streams"
        ],
        "payload": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/StreamFilter"
          }
        },
        "response": {
          "required": true,
          "multiple": true,
            "schema": {
              "$ref": "#/components/schemas/StreamAttributes"
          }
        }
      }
    },
    "/v2/streams/{sid}/info": {
      "get": {
        "summary": "Get information about a partcular stream.",
        "parameters": {
          "sessionToken": {
            "description": "Session authentication token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          "sid": {
            "description": "Stream Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Streams"
        ],
        "response": {
          "required": true,
            "schema": {
              "$ref": "#/components/schemas/V2StreamAttributes"
          }
        }
      }
    }
  },
	"components": {
		"schemas": {
      "UserNameList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "UserName": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        }
      },
      "UserIdList": {
        "type": "array",
        "items": {
          "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
        }
      },
      "UserId": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "StringId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "PodCertificate": {
        "type": "object",
        "properties": {
          "certificate": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/PemCertificate"
          }
        }
      },
      "Avatar": {
        "type": "object",
        "properties": {
          "size": {
            "description": "The Avatar Size",
            "type": "string"
          },
          "url": {
            "description": "Url of the image",
            "type": "string"
          }
        }
      },
      "AvatarList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Avatar"
        }
      },
      "V2UserList": {
        "description": "List of User record version 2",
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserV2"
            },
            "description": "List of all users found with the search"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserError"
            },
            "description": "List of all errors found with the informed search criteria"
          }
        }
      },
      "UserError": {
        "description": "User error information",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code informing what is wrong"
          },
          "email": {
            "type": "string",
            "description": "Email with error. Only one of the following fields should be present: email or id"
          },
          "id": {
            "type": "string",
            "description": "Id with error. Only one of the following fields should be present: email or id"
          }
        }
      },
      "UserV2": {
        "description": "User record version 2",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "emailAddress": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "avatars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Avatar"
            }
          },
          "workPhoneNumber": {
            "type": "string",
            "description": "Note: only available if the application has the extended user or contact permission"
          },
          "mobilePhoneNumber": {
            "type": "string",
            "description": "Note: only available if the application has the extended user or contact permission"
          },
          "jobFunction": {
            "type": "string",
            "description": "Note: only available if the application has the extended user or contact permission"
          },
          "department": {
            "type": "string",
            "description": "Note: only available if the application has the extended user or contact permission"
          },
          "division": {
            "type": "string",
            "description": "Note: only available if the application has the extended user or contact permission"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "#StreamList": {
        "description": "A list of streams of which the requesting user is a member.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StreamAttributes"
        }
      },
      "StreamAttributes": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          },
          "crossPod": {
            "type": "boolean",
            "description": "If true, this is a cross-pod stream."
          },
          "active": {
            "type": "boolean",
            "description": "If true, this stream is active."
          },
          "streamType": {
            "$ref": "#/components/schemas/StreamType"
          },
          "streamAttributes": {
            "$ref": "#/components/schemas/ConversationSpecificStreamAttributes"
          },
          "roomAttributes": {
            "$ref": "#/components/schemas/RoomSpecificStreamAttributes"
          }
        }
      },
      "StreamType": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StreamTypeEnum"
          }
        }
      },
      "StreamTypeEnum": {
        "type": "string",
        "enum": [
          "IM",
          "MIM",
          "ROOM",
          "POST"
        ]
      },
      "ConversationSpecificStreamAttributes": {
        "type": "object",
        "properties": {
          "members": {
            "$ref": "#/components/schemas/UserIdList"
          }
        }
      },
      "RoomSpecificStreamAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Room name."
          }
        }
      },
      "StreamFilter": {
        "description": "Stream filtering parameters.",
        "properties": {
          "streamTypes": {
            "description": "Types of streams to search for.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StreamType"
            }
          },
          "includeInactiveStreams": {
            "description": "Whether to include inactive streams in the list of results.",
            "type": "boolean"
          }
        }
      },
      "V2StreamAttributes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The stream ID."
          },
          "crossPod": {
            "type": "boolean",
            "description": "If true, this is a cross-pod stream."
          },
          "origin": {
            "type": "string",
            "description": "INTERNAL if the creator of this stream belongs to the pod, EXTERNAL otherwise"
          },
          "active": {
            "type": "boolean",
            "description": "If true, this stream is active."
          },
          "lastMessageDate": {
            "type": "integer",
            "format": "int64",
            "description": "unix timestamp of the last message sent in the stream"
          },
          "streamType": {
            "$ref": "#/components/schemas/V2StreamType"
          },
          "streamAttributes": {
            "$ref": "#/components/schemas/V2ConversationSpecificStreamAttributes"
          },
          "roomAttributes": {
            "$ref": "#/components/schemas/V2RoomSpecificStreamAttributes"
          }
        }
      },
      "V2StreamType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "V2ConversationSpecificStreamAttributes": {
        "type": "object",
        "properties": {
          "members": {
            "$ref": "#/components/schemas/UserIdList"
          }
        }
      },
      "V2RoomSpecificStreamAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Room name."
          }
        }
      }
		}
	}
}
